{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://json.schemastore.org/codecov",
    "title": "Codecov configuration file",
    "description": "The Codecov configuration file is used to configure your repository's Codecov experience.",
    "type": "object",
    "properties": {
        "codecov": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "pattern": "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
                    "title": "Url",
                    "description": "pattern: https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*), description: "
                },
                "token": {
                    "type": "string",
                    "title": "Token",
                    "description": "The repository upload token. More info: https://docs.codecov.com/docs/codecov-uploader#upload-token"
                },
                "slug": {
                    "type": "string",
                    "title": "Slug",
                    "description": "description: "
                },
                "bot": {
                    "type": "string",
                    "title": "Bot",
                    "description": "The username you want to use for Codecov operations. More info: https://docs.codecov.com/docs/team-bot"
                },
                "branch": {
                    "type": "string",
                    "coerce": "branch_normalize",
                    "title": "Branch",
                    "description": "description: "
                },
                "ci": {
                    "type": "array",
                    "title": "Ci",
                    "description": "Additional CI provider URLs you want Codecov to recognize. More info: https://docs.codecov.com/docs/detecting-ci-services",
                    "items": {
                        "type": "string"
                    }
                },
                "assume_all_flags": {
                    "title": "Assume all flags",
                    "description": " True,  False,  yes,  no,  on,  off",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "strict_yaml_branch": {
                    "type": "string",
                    "title": "Strict yaml branch",
                    "description": "Specify a branch you want Codecov to always only read the YAML from. More info: https://docs.codecov.io/docs/codecov-yaml#section-restricting-changes"
                },
                "max_report_age": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    ],
                    "title": "Max report age",
                    "description": "The age you want coverage reports to expire at, or if you want to disable this check. Expired reports will not be processed by codecov. More info: https://docs.codecov.io/docs/codecov-yaml#section-expired-reports"
                },
                "disable_default_path_fixes": {
                    "title": "Disable default path fixes",
                    "description": "Should Codecov's default path fixes be disabled. More info: https://docs.codecov.io/docs/fixing-paths. Enum: True,  False,  yes,  no,  on,  off",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "require_ci_to_pass": {
                    "title": "Require ci to pass",
                    "description": "Should Codecov wait for all other statuses to pass before sending its status. Enum: True, False,  yes,  no,  on,  off",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "allow_coverage_offsets": {
                    "title": "Allow coverage offsets",
                    "description": " True,  False,  yes,  no,  on,  off",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "allow_pseudo_compare": {
                    "title": "Allow pseudo compare",
                    "description": " True,  False,  yes,  no,  on,  off",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "archive": {
                    "type": "object",
                    "properties": {
                        "uploads": {
                            "title": "Uploads",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Archive",
                    "description": "Configure cloud report archiving. Enum: True, False, yes, no, on, off"
                },
                "notify": {
                    "type": "object",
                    "properties": {
                        "after_n_builds": {
                            "type": "integer",
                            "minimum": 0,
                            "title": "After n builds",
                            "description": "How many uploaded reports Codecov should wait to receive before sending statuses. More info: https://docs.codecov.io/docs/notifications#section-preventing-notifications-until-after-n-builds."
                        },
                        "countdown": {
                            "type": "integer",
                            "title": "Countdown",
                            "description": "description: "
                        },
                        "delay": {
                            "type": "integer",
                            "title": "Delay",
                            "description": "description: "
                        },
                        "wait_for_ci": {
                            "title": "Wait for ci",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "require_ci_to_pass": {
                            "title": "Require ci to pass",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Notify",
                    "description": "Configure how Codecov sends a PR comment"
                },
                "ui": {
                    "type": "object",
                    "properties": {
                        "hide_density": {
                            "anyof": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "list",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            ],
                            "title": "Hide density",
                            "description": "description: "
                        },
                        "hide_complexity": {
                            "anyof": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "list",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            ],
                            "title": "Hide complexity",
                            "description": "description: "
                        },
                        "hide_contexual": {
                            "title": "Hide contexual",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "hide_sunburst": {
                            "title": "Hide sunburst",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "hide_search": {
                            "title": "Hide search",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Ui",
                    "description": "description: "
                }
            },
            "title": "Codecov",
            "description": "description: Configure general codecov settings. More info: https://docs.codecov.com/docs/codecov-yaml"
        },
        "coverage": {
            "type": "object",
            "properties": {
                "precision": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 99,
                    "title": "Precision",
                    "description": "min: 0, description: "
                },
                "round": {
                    "enum": [
                        "down",
                        "up",
                        "nearest"
                    ],
                    "title": "Round",
                    "description": " down,  up,  nearest, description: "
                },
                "range": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "pattern": "(\\d+)(\\.\\d+)?%?|(\\d+)...(\\d+)"
                        },
                        {
                            "type": "array",
                            "items": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "minItems": 1,
                            "maxItems": 2
                        }
                    ],
                    "title": "Range",
                    "description": "maxlength: 2, description: "
                },
                "notify": {
                    "type": "object",
                    "properties": {
                        "irc": {
                            "type": "object",
                            "title": "Irc",
                            "description": "description: ",
                            "patternProperties": {
                                "channel": {
                                    "type": "string"
                                },
                                "server": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "nickserv_password": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "notice": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        },
                        "slack": {
                            "type": "object",
                            "title": "Slack",
                            "description": "description: ",
                            "patternProperties": {
                                "attachments": {
                                    "type": "string",
                                    "pattern": "^([^,]+)(,[^,]+)*$"
                                },
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        },
                        "gitter": {
                            "type": "object",
                            "title": "Gitter",
                            "description": "description: ",
                            "patternProperties": {
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        },
                        "hipchat": {
                            "type": "object",
                            "title": "Hipchat",
                            "description": "",
                            "patternProperties": {
                                "card": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "notify": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        },
                        "webhook": {
                            "type": "object",
                            "title": "Webhook",
                            "description": "description: ",
                            "patternProperties": {
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        },
                        "email": {
                            "type": "object",
                            "title": "Email",
                            "description": "description: ",
                            "patternProperties": {
                                "to": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "secret"
                                    }
                                },
                                "layout": {
                                    "type": "string",
                                    "pattern": "^([^,]+)(,[^,]+)*$"
                                },
                                "url": {
                                    "type": "string",
                                    "coerce": "secret"
                                },
                                "branches": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                },
                                "threshold": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ],
                                    "coerce": "percentage_to_number"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "pattern": "^[\\w\\.\\-]{1,45}$"
                                    }
                                },
                                "base": {
                                    "enum": [
                                        "parent",
                                        "pr",
                                        "auto"
                                    ]
                                },
                                "only_pulls": {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "paths": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "coerce": "regexify_path_pattern"
                                    }
                                }
                            },
                            "unevaluatedProperties": false
                        }
                    },
                    "title": "Notify",
                    "description": "description: "
                },
                "status": {
                    "oneOf": [
                        {
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        {
                            "type": "object",
                            "properties": {
                                "default_rules": {
                                    "type": "object",
                                    "properties": {
                                        "flag_coverage_not_uploaded_behavior": {
                                            "enum": [
                                                "include",
                                                "exclude",
                                                "pass"
                                            ],
                                            "title": "Flag coverage not uploaded behavior",
                                            "description": ""
                                        },
                                        "carryforward_behavior": {
                                            "enum": [
                                                "include",
                                                "exclude",
                                                "pass"
                                            ],
                                            "title": "Carryforward behavior",
                                            "description": ""
                                        }
                                    },
                                    "title": "Default rules",
                                    "description": ""
                                },
                                "project": {
                                    "oneOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "keysrules": {
                                        "type": "string",
                                        "pattern": "^[\\w\\-\\.]+$"
                                    },
                                    "valuesrules": {
                                        "nullable": true,
                                        "type": [
                                            "object",
                                            "boolean"
                                        ],
                                        "properties": {
                                            "target": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "anyof": [
                                                    {
                                                        "allowed": [
                                                            "auto"
                                                        ]
                                                    },
                                                    {
                                                        "regex": "(\\d+)(\\.\\d+)?%?"
                                                    }
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "include_changes": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "anyof": [
                                                    {
                                                        "allowed": [
                                                            "auto"
                                                        ]
                                                    },
                                                    {
                                                        "regex": "(\\d+)(\\.\\d+)?%?"
                                                    }
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "threshold": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "flags": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "pattern": "^[\\w\\.\\-]{1,45}$"
                                                }
                                            },
                                            "base": {
                                                "type": "string",
                                                "enum": [
                                                    "parent",
                                                    "pr",
                                                    "auto"
                                                ]
                                            },
                                            "branches": {
                                                "type": "array",
                                                "properties": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "coerce": "branch_name"
                                                },
                                                "nullable": true
                                            },
                                            "disable_approx": {
                                                "type": "boolean"
                                            },
                                            "enabled": {
                                                "type": "boolean"
                                            },
                                            "if_ci_failed": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_no_uploads": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_not_found": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "informational": {
                                                "type": "boolean"
                                            },
                                            "measurement": {
                                                "type": "string",
                                                "nullable": true,
                                                "enum": [
                                                    "line",
                                                    "statement",
                                                    "branch",
                                                    "method",
                                                    "complexity"
                                                ]
                                            },
                                            "only_pulls": {
                                                "type": "boolean"
                                            },
                                            "skip_if_assumes": {
                                                "type": "boolean"
                                            },
                                            "removed_code_behavior": {
                                                "type": [
                                                    "string",
                                                    "boolean"
                                                ],
                                                "enum": [
                                                    "removals_only",
                                                    "adjust_base",
                                                    "fully_covered_patch",
                                                    "off",
                                                    false
                                                ]
                                            },
                                            "paths": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "coerce": "regexify_path_pattern"
                                                }
                                            },
                                            "carryforward_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            },
                                            "flag_coverage_not_uploaded_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            }
                                        }
                                    },
                                    "title": "Project",
                                    "description": ""
                                },
                                "patch": {
                                    "oneOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "keysrules": {
                                        "type": "string",
                                        "pattern": "^[\\w\\-\\.]+$"
                                    },
                                    "valuesrules": {
                                        "type": [
                                            "object",
                                            "boolean"
                                        ],
                                        "nullable": true,
                                        "properties": {
                                            "target": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "anyof": [
                                                    {
                                                        "allowed": [
                                                            "auto"
                                                        ]
                                                    },
                                                    {
                                                        "regex": "(\\d+)(\\.\\d+)?%?"
                                                    }
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "include_changes": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "anyof": [
                                                    {
                                                        "allowed": [
                                                            "auto"
                                                        ]
                                                    },
                                                    {
                                                        "regex": "(\\d+)(\\.\\d+)?%?"
                                                    }
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "threshold": {
                                                "type": [
                                                    "string",
                                                    "number"
                                                ],
                                                "nullable": true,
                                                "coerce": "percentage_to_number"
                                            },
                                            "flags": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "pattern": "^[\\w\\.\\-]{1,45}$"
                                                }
                                            },
                                            "base": {
                                                "type": "string",
                                                "enum": [
                                                    "parent",
                                                    "pr",
                                                    "auto"
                                                ]
                                            },
                                            "branches": {
                                                "type": "array",
                                                "properties": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "coerce": "branch_name"
                                                },
                                                "nullable": true
                                            },
                                            "disable_approx": {
                                                "type": "boolean"
                                            },
                                            "enabled": {
                                                "type": "boolean"
                                            },
                                            "if_ci_failed": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_no_uploads": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_not_found": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "informational": {
                                                "type": "boolean"
                                            },
                                            "measurement": {
                                                "type": "string",
                                                "nullable": true,
                                                "enum": [
                                                    "line",
                                                    "statement",
                                                    "branch",
                                                    "method",
                                                    "complexity"
                                                ]
                                            },
                                            "only_pulls": {
                                                "type": "boolean"
                                            },
                                            "skip_if_assumes": {
                                                "type": "boolean"
                                            },
                                            "removed_code_behavior": {
                                                "type": [
                                                    "string",
                                                    "boolean"
                                                ],
                                                "enum": [
                                                    "removals_only",
                                                    "adjust_base",
                                                    "fully_covered_patch",
                                                    "off",
                                                    false
                                                ]
                                            },
                                            "paths": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "coerce": "regexify_path_pattern"
                                                }
                                            },
                                            "carryforward_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            },
                                            "flag_coverage_not_uploaded_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            }
                                        }
                                    },
                                    "title": "Patch",
                                    "description": ""
                                },
                                "changes": {
                                    "oneOf": [
                                        {
                                            "type": "object"
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "keysrules": {
                                        "type": "string",
                                        "pattern": "^[\\w\\-\\.]+$"
                                    },
                                    "valuesrules": {
                                        "type": [
                                            "object",
                                            "boolean"
                                        ],
                                        "nullable": true,
                                        "properties": {
                                            "flags": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "pattern": "^[\\w\\.\\-]{1,45}$"
                                                }
                                            },
                                            "base": {
                                                "type": "string",
                                                "enum": [
                                                    "parent",
                                                    "pr",
                                                    "auto"
                                                ]
                                            },
                                            "branches": {
                                                "type": "array",
                                                "properties": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "coerce": "branch_name"
                                                },
                                                "nullable": true
                                            },
                                            "disable_approx": {
                                                "type": "boolean"
                                            },
                                            "enabled": {
                                                "type": "boolean"
                                            },
                                            "if_ci_failed": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_no_uploads": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "if_not_found": {
                                                "type": "string",
                                                "enum": [
                                                    "success",
                                                    "failure",
                                                    "error",
                                                    "ignore"
                                                ]
                                            },
                                            "informational": {
                                                "type": "boolean"
                                            },
                                            "measurement": {
                                                "type": "string",
                                                "nullable": true,
                                                "enum": [
                                                    "line",
                                                    "statement",
                                                    "branch",
                                                    "method",
                                                    "complexity"
                                                ]
                                            },
                                            "only_pulls": {
                                                "type": "boolean"
                                            },
                                            "skip_if_assumes": {
                                                "type": "boolean"
                                            },
                                            "removed_code_behavior": {
                                                "type": [
                                                    "string",
                                                    "boolean"
                                                ],
                                                "enum": [
                                                    "removals_only",
                                                    "adjust_base",
                                                    "fully_covered_patch",
                                                    "off",
                                                    false
                                                ]
                                            },
                                            "paths": {
                                                "type": "array",
                                                "nullable": true,
                                                "properties": {
                                                    "type": "string",
                                                    "coerce": "regexify_path_pattern"
                                                }
                                            },
                                            "carryforward_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            },
                                            "flag_coverage_not_uploaded_behavior": {
                                                "type": "string",
                                                "enum": [
                                                    "include",
                                                    "exclude",
                                                    "pass"
                                                ]
                                            }
                                        }
                                    },
                                    "title": "Changes",
                                    "description": ""
                                },
                                "no_upload_behavior": {
                                    "enum": [
                                        "pass",
                                        "fail"
                                    ],
                                    "title": "No upload behavior",
                                    "description": ""
                                }
                            }
                        }
                    ],
                    "title": "Status",
                    "description": "description: "
                }
            },
            "title": "Coverage",
            "description": "description: "
        },
        "parsers": {
            "type": "object",
            "properties": {
                "go": {
                    "type": "object",
                    "properties": {
                        "partials_as_hits": {
                            "title": "Partials as hits",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Go",
                    "description": "description: "
                },
                "javascript": {
                    "type": "object",
                    "properties": {
                        "enable_partials": {
                            "title": "Enable partials",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Javascript",
                    "description": "description: "
                },
                "v1": {
                    "type": "object",
                    "properties": {
                        "include_full_missed_files": {
                            "title": "Include full missed files",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "V1",
                    "description": "description: "
                },
                "gcov": {
                    "type": "object",
                    "properties": {
                        "branch_detection": {
                            "type": "object",
                            "properties": {
                                "conditional": {
                                    "title": "Conditional",
                                    "description": " True,  False,  yes,  no,  on,  off",
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "loop": {
                                    "title": "Loop",
                                    "description": " True,  False,  yes,  no,  on,  off",
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "method": {
                                    "title": "Method",
                                    "description": " True,  False,  yes,  no,  on,  off",
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                "macro": {
                                    "title": "Macro",
                                    "description": " True,  False,  yes,  no,  on,  off",
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                }
                            },
                            "title": "Branch detection",
                            "description": "description: "
                        }
                    },
                    "title": "Gcov",
                    "description": "description: "
                },
                "jacoco": {
                    "type": "object",
                    "properties": {
                        "partials_as_hits": {
                            "title": "Partials as hits",
                            "description": " True,  False,  yes,  no,  on,  off",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Jacoco",
                    "description": "description: "
                }
            },
            "title": "Parsers",
            "description": "description: "
        },
        "ignore": {
            "type": "array",
            "title": "Ignore",
            "description": "description: ",
            "items": {
                "type": "string",
                "coerce": "regexify_path_pattern"
            }
        },
        "fixes": {
            "type": "array",
            "title": "Fixes",
            "description": "description: ",
            "items": {
                "type": "string",
                "coerce": "regexify_path_fix"
            }
        },
        "flags": {
            "type": "object",
            "title": "Flags",
            "description": "Flags are typically used to customize the behavior of Codecov during the code coverage analysis process.",
            "patternProperties": {
                "joined": {
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "carryforward": {
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "carryforward_mode": {
                    "enum": [
                        "all",
                        "labels"
                    ]
                },
                "required": {
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "ignore": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "coerce": "regexify_path_pattern"
                    }
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "coerce": "regexify_path_pattern"
                    }
                },
                "assume": {
                    "oneOf": [
                        {
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "branches": {
                                    "type": "array",
                                    "title": "Branches",
                                    "description": "",
                                    "items": {
                                        "type": "string",
                                        "nullable": true,
                                        "coerce": "branch_name"
                                    }
                                }
                            }
                        }
                    ]
                },
                "after_n_builds": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "unevaluatedProperties": false
        },
        "flag_management": {
            "type": "object",
            "properties": {
                "default_rules": {
                    "type": "object",
                    "properties": {
                        "statuses": {
                            "type": "array",
                            "title": "Statuses",
                            "description": "Flag management rule statuses refer to the different states or conditions associated with flag management rules.",
                            "prefixItems": "todo"
                        },
                        "carryforward_mode": {
                            "enum": [
                                "all",
                                "labels"
                            ],
                            "title": "Carryforward mode",
                            "description": "Reference of past coverage for tests that are not run on current commit."
                        },
                        "carryforward": {
                            "title": "Carryforward",
                            "description": "Carryforward Flags are designed for projects that do not upload total coverage for every commit. Users can define the following states for flags: True,  False,  yes,  no,  on,  off.",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "paths": {
                            "type": "array",
                            "title": "Paths",
                            "description": "Define rules that specify conditions and actions for flag management. These rules can be based on various criteria such as coverage thresholds, branch names, commit messages, or other factors relevant to your project.",
                            "items": {
                                "type": "string",
                                "coerce": "regexify_path_pattern"
                            }
                        },
                        "ignore": {
                            "type": "array",
                            "title": "Ignore",
                            "description": "To ignore or exclude specific files, directories, or patterns from flag management actions, you can define a flag management rule with conditions that exclude those specific elements.",
                            "items": {
                                "type": "string",
                                "coerce": "regexify_path_pattern"
                            }
                        },
                        "after_n_builds": {
                            "type": "integer",
                            "minimum": 0,
                            "title": "After n builds",
                            "description": "Refers to the ability to apply specific flag management rules after a certain number of builds or iterations. Gradually enforce stricter or different flag management behavior as your project progresses over time."
                        }
                    },
                    "title": "Default rules",
                    "description": "Rules are a set of defined conditions and actions that control the behavior of flags during the code coverage analysis process."
                },
                "individual_flags": {
                    "type": "array",
                    "title": "Individual flags",
                    "description": "Individual flags refer to specific configuration options or settings that can be used to customize the behavior of the code coverage reporting and analysis process.",
                    "prefixItems": "todo"
                }
            },
            "title": "Flag management",
            "description": "Allows you to control the behavior of flags during the code coverage analysis process."
        },
        "component_management": {
            "type": "object",
            "properties": {
                "default_rules": {
                    "type": "object",
                    "properties": {
                        "statuses": {
                            "type": "array",
                            "title": "Statuses",
                            "description": "Component management rule statuses refer to the different states or conditions associated with component management rules.",
                            "prefixItems": "todo"
                        },
                        "flag_regexes": {
                            "type": "array",
                            "title": "Flag regexes",
                            "description": "Refers to the use of regular expressions to define patterns for matching specific flags or conditions during the code coverage analysis process.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "paths": {
                            "type": "array",
                            "title": "Paths",
                            "description": "Define rules that specify conditions and actions for component management. These rules can be based on various criteria such as coverage thresholds, branch names, commit messages, or other factors relevant to your project.",
                            "items": {
                                "type": "string",
                                "coerce": "regexify_path_pattern"
                            }
                        }
                    },
                    "title": "Default rules",
                    "description": "Rules are a set of defined conditions and actions that control the behavior of components during the code coverage analysis process."
                },
                "individual_components": {
                    "type": "array",
                    "title": "Individual components",
                    "description": "Individual components refer to specific configuration options or settings that can be used to customize the behavior of the code coverage reporting and analysis process.",
                    "prefixItems": "todo"
                }
            },
            "title": "Component management",
            "description": "Use components you specify to create custom statuses and get coverage information from parts of your code that are not easily broken up into different uploads or span multiple flag groups."
        },
        "comment": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "layout": {
                            "type": "string",
                            "title": "Layout",
                            "description": "",
                            "pattern": "^([^,]+)(,[^,]+)*$"
                        },
                        "require_changes": {
                            "title": "Require changes",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "require_base": {
                            "title": "Require base",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "require_head": {
                            "title": "Require head",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "show_critical_paths": {
                            "title": "Show critical paths",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "branches": {
                            "type": "array",
                            "title": "Branches",
                            "description": "",
                            "items": {
                                "type": "string",
                                "nullable": true,
                                "coerce": "branch_name"
                            }
                        },
                        "paths": {
                            "type": "array",
                            "title": "Paths",
                            "description": "",
                            "items": {
                                "type": "string",
                                "coerce": "regexify_path_pattern"
                            }
                        },
                        "flags": {
                            "type": "array",
                            "title": "Flags",
                            "description": "Flags are typically used to customize the behavior of Codecov during the code coverage analysis process.",
                            "items": {
                                "type": "string",
                                "pattern": "^[\\w\\.\\-]{1,45}$"
                            }
                        },
                        "behavior": {
                            "enum": [
                                "default",
                                "once",
                                "new",
                                "spammy"
                            ],
                            "title": "Behavior",
                            "description": ""
                        },
                        "after_n_builds": {
                            "type": "integer",
                            "minimum": 0,
                            "title": "After n builds",
                            "description": ""
                        },
                        "show_carryforward_flags": {
                            "title": "Show carryforward flags",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "hide_comment_details": {
                            "title": "Hide comment details",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    }
                },
                {
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                }
            ],
            "title": "Comment",
            "description": "Refer to the feedback or remarks that Codecov can provide on your code coverage results. These comments are typically added to pull requests or specific lines of code to provide additional information or suggestions regarding the code coverage analysis."
        },
        "github_checks": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "title": "Annotations",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    }
                },
                {
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                }
            ],
            "title": "Github checks",
            "description": "Display code coverage information and analysis results directly within the GitHub interface. "
        },
        "profiling": {
            "type": "object",
            "properties": {
                "fixes": {
                    "type": "array",
                    "title": "Fixes",
                    "description": "Add path rixes to your codecov.yml configuration to see critical changes.",
                    "items": {
                        "type": "string",
                        "coerce": "regexify_path_fix"
                    }
                },
                "grouping_attributes": {
                    "type": "array",
                    "title": "Grouping attributes",
                    "description": "Grouping attributes allow you to categorize your code coverage data based on specific criteria. These attributes can be applied to files, directories, or other relevant components of your codebase. Grouping attributes provide a way to aggregate and filter coverage information, enabling you to gain insights into different aspects of your codebase's test coverage.",
                    "items": {
                        "type": "string"
                    }
                },
                "critical_files_paths": {
                    "type": "array",
                    "title": "Critical files paths",
                    "description": "You can supply any of the following as an element of critical_files_paths: 1.The fully qualified path to the file relative to the root of the repository, 2. A path containing globs. 3. A regular expression.",
                    "items": {
                        "type": "string",
                        "coerce": "regexify_path_pattern"
                    }
                }
            },
            "title": "Profiling",
            "description": "Impact Analysis requires a profiling token used to identify your repository and authenticate API requests. You can find your token in your repo settings page."
        },
        "beta_groups": {
            "type": "array",
            "title": "Beta groups",
            "description": "To see Impacted Entrypoints in your pull request comments, 'betaprofiling' must be added to the comment.layout section of your codecov.yml.",
            "items": {
                "type": "string"
            }
        }
    }
}